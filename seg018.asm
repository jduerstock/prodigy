
	nop
	
	push	ds
	push	ax
	mov	ax,0x3e70
	mov	ds,ax
	pushfw
	call	word far [0x7ca]
	cmp	byte [0x7ce],0x0
	jnz	.l04b7
	inc	byte [0x7ce]
	mov	[0x7c6],sp
	mov	[0x7c8],ss
	mov	ss,ax
	lea	sp,[0x7c6]
	sti
	push	es
	push	bp
	push	bx
	push	cx
	push	di
	push	dx
	push	si
	mov	es,ax
	cld
	cli
	db	0x9a,0xf9,0x04,0x16,0x0b
	db	0xfb,0x5e,0x5a,0x5f,0x59,0x5b,0x5d,0x07,0xfa,0xa1,0xc8,0x07,0x8e,0xd0,0x8b,0x26
	db	0xc6,0x07,0xc6,0x06,0xce,0x07,0x00

.l04b7:
	db	0x58,0x1f,0xcf,0x53,0x1e,0x52,0x06,0x53,0xb8
	db	0x08,0x35,0xcd,0x21,0x89,0x1e,0xca,0x07,0x8c,0x06,0xcc,0x07,0xba,0x0a,0x00,0x0e
	db	0x1f,0xb8,0x08,0x25,0xcd,0x21,0x5b,0x07,0x5a,0x1f,0x5b,0x33,0xc0,0xcb

sub_1af5e:
	push	dx
	push	si
	push	ds
	lds	dx,[0x7ca]
	mov	ax,0x2508
	int	0x21
	pop	ds
	xor_ax_ax
	mov	dx,0x64
	lea	si,[0x6fe]

.l4f4:
	db	0x81,0x3c,0xff,0xff ; cmp	word [si],0xffff
	jnz	.l501
	inc	ax
	add	si,byte +0x2
	dec	dx
	jnz	.l4f4

.l501:
	pop	si
	pop	dx
	retf

